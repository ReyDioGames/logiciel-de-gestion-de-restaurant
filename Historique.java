/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cafeteriaresto;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Rayane
 */
public class Historique extends javax.swing.JFrame {

    /**
     * Creates new form Historique
     */
    public Historique() {
        initComponents();
        jLabel3.setVisible(false);
        
        
        long totalVendu = 0;
        long pourBenef = 0;
        try {
            int taille =0;
            Connection conr;
            conr = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
            String rrr = "Select count(IdVente) from vente";
        PreparedStatement preparedr = conr.prepareStatement(rrr);
        ResultSet rsr = preparedr.executeQuery();
        while(rsr.next()){taille = rsr.getInt("count(IdVente)");}
        
        
        
        String columns[] = { "N°Vente", "Date" ,"Produit", "Quantité", "Prix" };
        String data[][] = new String[taille+10][5];
        Connection con;
        PreparedStatement prepared;
        ResultSet rs;
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
        String requete = "Select * from vente";
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        int i = 0;
        while(rs.next()){
        i++;
        }
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        i--;
        while(rs.next()){
              String idV = rs.getString("IdVente");
              String date = rs.getString("Date");
              String prod = rs.getString("Produit");
              String prix = rs.getString("PrixT");
              String qte = rs.getString("Qte");
              data[i][0] = idV;
              data[i][1] = date;
              data[i][2] = prod;
              data[i][3] = qte;
              data[i][4] = prix;
              totalVendu += Integer.parseInt(prix);
              pourBenef += rs.getInt("PrixAchat")*Integer.parseInt(qte);
              i--;
        }
        DefaultTableModel model = new DefaultTableModel(data, columns);
        jTable1.setModel(model);
        pourBenef = totalVendu - pourBenef;
        jTextField2.setText("Total Vendu : "+totalVendu+" DA");
        jTextField3.setText("Benefice Total : "+pourBenef+" DA");
        
        
    } catch (Exception e) {
      System.out.println(e);
    }
        
        
        try {
            int taille =0;
            Connection conr;
            conr = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
            String rrr = "Select count(NumAchat) from achat";
        PreparedStatement preparedr = conr.prepareStatement(rrr);
        ResultSet rsr = preparedr.executeQuery();
        while(rsr.next()){taille = rsr.getInt("count(NumAchat)");}
        
        
        
        String columns[] = { "N°Achat", "Date" ,"Somme", "Description" };
        String data[][] = new String[taille+10][4];
        Connection con;
        PreparedStatement prepared;
        ResultSet rs;
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
        String requete = "Select * from achat";
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        int i = 0;
        while(rs.next()){
        i++;
        }
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        i--;
        while(rs.next()){
              String idV = rs.getString("NumAchat");
              String date = rs.getString("Date");
              String somme = rs.getString("Somme");
              String desc = rs.getString("Description");
              data[i][0] = idV;
              data[i][1] = date;
              data[i][2] = somme;
              data[i][3] = desc;
              i--;
        }
        DefaultTableModel model = new DefaultTableModel(data, columns);
        jTable2.setModel(model);
        
        
    } catch (Exception e) {
      System.out.println(e);
    }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jToolBar2 = new javax.swing.JToolBar();
        jButton7 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "N° Vente", "Date", "Produit", "Quantité", "Prix"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setRowHeight(30);
        jScrollPane1.setViewportView(jTable1);

        jTable2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "N° Achats", "Date", "Somme", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable2.setRowHeight(30);
        jScrollPane2.setViewportView(jTable2);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Ventes :");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Achat :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 131, Short.MAX_VALUE)
        );

        jComboBox1.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Jour", "Mois", "Année" }));

        jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextField2.setEditable(false);
        jTextField2.setBackground(new java.awt.Color(255, 255, 255));
        jTextField2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jTextField2.setText("Total Vendu : 00 DA");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jTextField3.setEditable(false);
        jTextField3.setBackground(new java.awt.Color(255, 255, 255));
        jTextField3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jTextField3.setText("Benefice Total : 00 DA");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setText("Rechercher");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton2.setText("Description");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane3.setViewportView(jTextArea1);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("jLabel3");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jTextField2)
                    .addComponent(jTextField3)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addComponent(jScrollPane3))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton2)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jToolBar2.setRollover(true);

        jButton7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton7.setText("Ventes");
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton7);

        jButton35.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton35.setText("Stock");
        jButton35.setFocusable(false);
        jButton35.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton35.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton35ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton35);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        Vente v = new Vente();
        v.setVisible(true);
        v.setExtendedState(MAXIMIZED_BOTH);
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton35ActionPerformed

        GestionStock gs = new GestionStock();
        gs.setVisible(true);
        gs.setExtendedState(MAXIMIZED_BOTH);
        this.dispose();
    }//GEN-LAST:event_jButton35ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

        long totalVendu = 0;
        long pourBenef = 0;
        
        try {
            int taille =0;
            Connection conr;
            conr = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
            String rrr = "Select count(IdVente) from vente";
        PreparedStatement preparedr = conr.prepareStatement(rrr);
        ResultSet rsr = preparedr.executeQuery();
        while(rsr.next()){taille = rsr.getInt("count(IdVente)");}
        
        
        
        String columns[] = { "N°Vente", "Date" ,"Produit", "Quantité", "Prix" };
        String data[][] = new String[taille+10][5];
        Connection con;
        PreparedStatement prepared;
        ResultSet rs;
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
        String requete = "";
        String reqAchat = "";
        if(jTextField1.getText().isEmpty()){
        requete = "Select * from vente";
        reqAchat = "Select * from achat";
        }else{
            String rech = jTextField1.getText();
            String choix = jComboBox1.getSelectedItem().toString();
            if(choix.equals("Jour")){requete = "Select * from vente Where Date ='"+rech+"'";
            reqAchat = "Select * from achat Where Date ='"+rech+"'";
            }
            if(choix.equals("Mois")){requete = "Select * from vente Where LEFT(Date,7) ='"+rech+"'";
            reqAchat = "Select * from achat Where LEFT(Date,7) ='"+rech+"'";
            }
            if(choix.equals("Année")){requete = "Select * from vente Where LEFT(Date,4) ='"+rech+"'";
            reqAchat = "Select * from achat Where LEFT(Date,4) ='"+rech+"'";
            }
        
        }
        
        
        
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        int i = 0;
        while(rs.next()){
        i++;
        }
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        i--;
        while(rs.next()){
              String idV = rs.getString("IdVente");
              String date = rs.getString("Date");
              String prod = rs.getString("Produit");
              String prix = rs.getString("PrixT");
              String qte = rs.getString("Qte");
              data[i][0] = idV;
              data[i][1] = date;
              data[i][2] = prod;
              data[i][3] = qte;
              data[i][4] = prix;
              totalVendu += Integer.parseInt(prix);
              pourBenef += rs.getInt("PrixAchat")*Integer.parseInt(qte);
              i--;
        }
        DefaultTableModel model = new DefaultTableModel(data, columns);
        jTable1.setModel(model);
        jTextField2.setText("Total Vendu : "+totalVendu+" DA");
        pourBenef = totalVendu-pourBenef;
        jTextField3.setText("Benefice Total : "+pourBenef+" DA");
        
        
        
        
        
        
        
        
    } catch (Exception e) {
      System.out.println(e);
    }
        
        
        
        try {
            int taille =0;
            Connection conr;
            conr = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
            String rrr = "Select count(NumAchat) from achat";
        PreparedStatement preparedr = conr.prepareStatement(rrr);
        ResultSet rsr = preparedr.executeQuery();
        while(rsr.next()){taille = rsr.getInt("count(NumAchat)");}
        
        
        
        String columns[] = { "N°Achat", "Date" ,"Somme", "Description" };
        String data[][] = new String[taille+10][4];
        Connection con;
        PreparedStatement prepared;
        ResultSet rs;
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
        String requete = "Select * from achat";
        
        
        if(jTextField1.getText().isEmpty()){
        requete = "Select * from achat";
        }else{
            String rech = jTextField1.getText();
            String choix = jComboBox1.getSelectedItem().toString();
            if(choix.equals("Jour")){
                requete = "Select * from achat Where Date ='"+rech+"'";
            }
            if(choix.equals("Mois")){
                requete = "Select * from achat Where LEFT(Date,7) ='"+rech+"'";
            
            }
            if(choix.equals("Année")){
                requete  = "Select * from achat Where LEFT(Date,4) ='"+rech+"'";
            }
        
        }
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        int i = 0;
        while(rs.next()){
        i++;
        }
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        i--;
        while(rs.next()){
              String idV = rs.getString("NumAchat");
              String date = rs.getString("Date");
              String somme = rs.getString("Somme");
              String desc = rs.getString("Description");
              data[i][0] = idV;
              data[i][1] = date;
              data[i][2] = somme;
              data[i][3] = desc;
              i--;
        }
        DefaultTableModel model = new DefaultTableModel(data, columns);
        jTable2.setModel(model);
        
        
    } catch (Exception e) {
      System.out.println(e);
    }
        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        long totalVendu = 0;
        long pourBenef = 0;
        
        try {
            int taille =0;
            Connection conr;
            conr = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
            String rrr = "Select count(IdVente) from vente";
        PreparedStatement preparedr = conr.prepareStatement(rrr);
        ResultSet rsr = preparedr.executeQuery();
        while(rsr.next()){taille = rsr.getInt("count(IdVente)");}
        
        
        
        String columns[] = { "N°Vente", "Date" ,"Produit", "Quantité", "Prix" };
        String data[][] = new String[taille+10][5];
        Connection con;
        PreparedStatement prepared;
        ResultSet rs;
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
        String requete = "";
        String reqAchat = "";
        if(jTextField1.getText().isEmpty()){
        requete = "Select * from vente";
        reqAchat = "Select * from achat";
        }else{
            String rech = jTextField1.getText();
            String choix = jComboBox1.getSelectedItem().toString();
            if(choix.equals("Jour")){requete = "Select * from vente Where Date ='"+rech+"'";
            reqAchat = "Select * from achat Where Date ='"+rech+"'";
            }
            if(choix.equals("Mois")){requete = "Select * from vente Where LEFT(Date,7) ='"+rech+"'";
            reqAchat = "Select * from achat Where LEFT(Date,7) ='"+rech+"'";
            }
            if(choix.equals("Année")){requete = "Select * from vente Where LEFT(Date,4) ='"+rech+"'";
            reqAchat = "Select * from achat Where LEFT(Date,4) ='"+rech+"'";
            }
        
        }
        
        
        
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        int i = 0;
        while(rs.next()){
        i++;
        }
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        i--;
        while(rs.next()){
              String idV = rs.getString("IdVente");
              String date = rs.getString("Date");
              String prod = rs.getString("Produit");
              String prix = rs.getString("PrixT");
              String qte = rs.getString("Qte");
              data[i][0] = idV;
              data[i][1] = date;
              data[i][2] = prod;
              data[i][3] = qte;
              data[i][4] = prix;
              totalVendu += Integer.parseInt(prix);
              pourBenef += rs.getInt("PrixAchat")*Integer.parseInt(qte);
              i--;
        }
        DefaultTableModel model = new DefaultTableModel(data, columns);
        jTable1.setModel(model);
        jTextField2.setText("Total Vendu : "+totalVendu+" DA");
        pourBenef = totalVendu-pourBenef;
        jTextField3.setText("Benefice Total : "+pourBenef+" DA");
        
        
        
        
        
        
        
        
    } catch (Exception e) {
      System.out.println(e);
    }
        
        
        
        try {
            int taille =0;
            Connection conr;
            conr = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
            String rrr = "Select count(NumAchat) from achat";
        PreparedStatement preparedr = conr.prepareStatement(rrr);
        ResultSet rsr = preparedr.executeQuery();
        while(rsr.next()){taille = rsr.getInt("count(NumAchat)");}
        
        
        
        String columns[] = { "N°Achat", "Date" ,"Somme", "Description" };
        String data[][] = new String[taille+10][4];
        Connection con;
        PreparedStatement prepared;
        ResultSet rs;
        Class.forName("com.mysql.jdbc.Driver");
        con = DriverManager.getConnection("jdbc:mysql://localhost/restocafe","root","");
        String requete = "Select * from achat";
        
        
        if(jTextField1.getText().isEmpty()){
        requete = "Select * from achat";
        }else{
            String rech = jTextField1.getText();
            String choix = jComboBox1.getSelectedItem().toString();
            if(choix.equals("Jour")){
                requete = "Select * from achat Where Date ='"+rech+"'";
            }
            if(choix.equals("Mois")){
                requete = "Select * from achat Where LEFT(Date,7) ='"+rech+"'";
            
            }
            if(choix.equals("Année")){
                requete  = "Select * from achat Where LEFT(Date,4) ='"+rech+"'";
            }
        
        }
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        int i = 0;
        while(rs.next()){
        i++;
        }
        prepared = con.prepareStatement(requete);
        rs = prepared.executeQuery();
        i--;
        while(rs.next()){
              String idV = rs.getString("NumAchat");
              String date = rs.getString("Date");
              String somme = rs.getString("Somme");
              String desc = rs.getString("Description");
              data[i][0] = idV;
              data[i][1] = date;
              data[i][2] = somme;
              data[i][3] = desc;
              i--;
        }
        DefaultTableModel model = new DefaultTableModel(data, columns);
        jTable2.setModel(model);
        
        
    } catch (Exception e) {
      System.out.println(e);
    } 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        try{
        String text = jTable2.getValueAt(jTable2.getSelectedRow(),3).toString();
        jTextArea1.setText(text);
        jLabel3.setVisible(false);
        }catch(Exception e){
        jLabel3.setText("Selectionner un Achat");
        jLabel3.setVisible(true);
        jLabel3.setForeground(Color.red);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Historique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Historique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Historique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Historique.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Historique().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton7;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JToolBar jToolBar2;
    // End of variables declaration//GEN-END:variables
}
